##########################################
# Header instance definitions            #
##########################################

errors:
    type: enum
    values:
    -   NoError: 1
    -   PacketTooShort: 2
    -   NoMatch: 3
    -   StackOutOfBounds: 4
    -   HeaderTooShort: 5
    -   ParserTimeout: 6

ethernet:
    fields:
    -   dst_addr: 48
    -   src_addr: 48
    -   ether_type: 16
    type: header

gtpu:
    fields:
    -   version: 3
    -   pt: 1
    -   spare: 1
    -   ex_flag: 1
    -   seq_flag: 1
    -   npdu_flag: 1
    -   msgtype: 8
    -   msglen: 16
    -   teid: 32
    type: header

inner_ipv4:
    calculated_fields:
    -   condition: valid(inner_ipv4)
        field: hdr_checksum
        func: calc_0
        type: update
    fields:
    -   version: 4
    -   ihl: 4
    -   dscp: 6
    -   ecn: 2
    -   len: 16
    -   identification: 16
    -   flags: 3
    -   frag_offset: 13
    -   ttl: 8
    -   protocol: 8
    -   hdr_checksum: 16
    -   src_addr: 32
    -   dst_addr: 32
    type: header

inner_tcp:
    fields:
    -   src_port: 16
    -   dst_port: 16
    -   seqNo: 32
    -   ackNo: 32
    -   dataOffset: 4
    -   res: 3
    -   ecn: 3
    -   ctrl: 6
    -   window: 16
    -   checksum: 16
    -   urgentPtr: 16
    type: header

inner_udp:
    fields:
    -   src_port: 16
    -   dst_port: 16
    -   len: 16
    -   checksum: 16
    type: header

ipv4:
    calculated_fields:
    -   condition: valid(ipv4)
        field: hdr_checksum
        func: calc
        type: update
    fields:
    -   version: 4
    -   ihl: 4
    -   dscp: 6
    -   ecn: 2
    -   len: 16
    -   identification: 16
    -   flags: 3
    -   frag_offset: 13
    -   ttl: 8
    -   protocol: 8
    -   hdr_checksum: 16
    -   src_addr: 32
    -   dst_addr: 32
    type: header

scalars:
    fields:
    -   metadata_t@l4_src_port: 16
    -   metadata_t@l4_dst_port: 16
    -   metadata_t@l4_inner_src_port: 16
    -   metadata_t@l4_inner_dst_port: 16
    -   metadata_t@far_id: 32
    -   metadata_t@decap_flag: 8
    -   metadata_t@encap_flag: 1
    -   metadata_t@intf: 8
    -   metadata_t@bypass_modify_mac: 1
    -   metadata_t@qfi: 6
    -   metadata_t@ue_ip: 32
    type: metadata

standard_metadata:
    fields:
    -   ingress_port: 16
    -   packet_length: 14
    -   egress_spec: 16
    -   egress_port: 16
    -   egress_instance: 10
    -   instance_type: 4
    -   clone_spec: 32
    -   parser_error_location: 8
    -   parser_status: 3
    -   checksum_error: 1
    type: metadata

tcp:
    fields:
    -   src_port: 16
    -   dst_port: 16
    -   seqNo: 32
    -   ackNo: 32
    -   dataOffset: 4
    -   res: 3
    -   ecn: 3
    -   ctrl: 6
    -   window: 16
    -   checksum: 16
    -   urgentPtr: 16
    type: header

udp:
    fields:
    -   src_port: 16
    -   dst_port: 16
    -   len: 16
    -   checksum: 16
    type: header


##########################################
# Field list definitions                 #
##########################################

field_list_1:
    fields:
    - ipv4.version
    - ipv4.ihl
    - ipv4.dscp
    - ipv4.ecn
    - ipv4.len
    - ipv4.identification
    - ipv4.flags
    - ipv4.frag_offset
    - ipv4.ttl
    - ipv4.protocol
    - ipv4.src_addr
    - ipv4.dst_addr
    type: field_list

field_list_2:
    fields:
    - inner_ipv4.version
    - inner_ipv4.ihl
    - inner_ipv4.dscp
    - inner_ipv4.ecn
    - inner_ipv4.len
    - inner_ipv4.identification
    - inner_ipv4.flags
    - inner_ipv4.frag_offset
    - inner_ipv4.ttl
    - inner_ipv4.protocol
    - inner_ipv4.src_addr
    - inner_ipv4.dst_addr
    type: field_list


##########################################
# Field list calculations                #
##########################################

calc:
    algorithm: csum16
    inputs:
    - field_list_1
    output_width: 16
    type: field_list_calculation

calc_0:
    algorithm: csum16
    inputs:
    - field_list_2
    output_width: 16
    type: field_list_calculation


##########################################
# Parse states                           #
##########################################

parse_gtpu:
    implementation: |-
        extract(gtpu);
        extract(inner_ipv4);
    select_value:
    - inner_ipv4.protocol
    src_filename: main.p4
    src_lineno: 190
    type: parse_state

parse_inner_tcp:
    implementation: |-
        extract(inner_tcp);
        set(scalars.metadata_t@l4_inner_src_port, inner_tcp.src_port);
        set(scalars.metadata_t@l4_inner_dst_port, inner_tcp.dst_port);
    src_filename: main.p4
    src_lineno: 215
    type: parse_state

parse_inner_udp:
    implementation: |-
        extract(inner_udp);
        set(scalars.metadata_t@l4_inner_src_port, inner_udp.src_port);
        set(scalars.metadata_t@l4_inner_dst_port, inner_udp.dst_port);
    src_filename: main.p4
    src_lineno: 208
    type: parse_state

parse_ipv4:
    implementation: extract(ipv4);
    select_value:
    - ipv4.protocol
    src_filename: main.p4
    src_lineno: 163
    type: parse_state

parse_tcp:
    implementation: |-
        extract(tcp);
        set(scalars.metadata_t@l4_src_port, tcp.src_port);
        set(scalars.metadata_t@l4_dst_port, tcp.dst_port);
    src_filename: main.p4
    src_lineno: 173
    type: parse_state

parse_udp:
    implementation: |-
        extract(udp);
        set(scalars.metadata_t@l4_src_port, udp.src_port);
        set(scalars.metadata_t@l4_dst_port, udp.dst_port);
    select_value:
    - udp.dst_port
    src_filename: main.p4
    src_lineno: 180
    type: parse_state

start:
    implementation: extract(ethernet);
    select_value:
    - ethernet.ether_type
    src_filename: main.p4
    src_lineno: 151
    type: parse_state


##########################################
# Parser                                 #
##########################################

parser:
    format: dot
    implementation: |-
        digraph {
            start -> parse_ipv4 [value="0x0800", mask="none", order="0"]
            start -> exit [value="default", mask="none", order="1"]
            parse_ipv4 -> parse_udp [value="0x11", mask="none", order="0"]
            parse_ipv4 -> parse_tcp [value="0x06", mask="none", order="1"]
            parse_ipv4 -> exit [value="default", mask="none", order="2"]
            parse_udp -> parse_gtpu [value="0x0868", mask="none", order="0"]
            parse_udp -> exit [value="default", mask="none", order="1"]
            parse_gtpu -> parse_inner_udp [value="0x11", mask="none", order="0"]
            parse_gtpu -> parse_inner_tcp [value="0x06", mask="none", order="1"]
            parse_gtpu -> exit [value="default", mask="none", order="2"]
            parse_inner_udp -> exit [value="default", mask="none", order="0"]
            parse_inner_tcp -> exit [value="default", mask="none", order="0"]
            parse_tcp -> exit [value="default", mask="none", order="0"]
        }
    start_state: start
    type: parser


##########################################
# Action Expressions                     #
##########################################

_expression_gtp_encap_0:
    expression: ((((ipv4.len) + (0x0010))) & (0xffff))
    format: bracketed_expr
    type: expression

_expression_gtp_encap_1:
    expression: ((((ipv4.len) + (0x0024))) & (0xffff))
    format: bracketed_expr
    type: expression


##########################################
# Action sets                            #
##########################################

ingress::act:
    implementation: |-
        add_header(inner_udp);
        modify_field(inner_udp.src_port, udp.src_port);
        modify_field(inner_udp.dst_port, udp.dst_port);
        modify_field(inner_udp.len, udp.len);
        modify_field(inner_udp.checksum, udp.checksum);
        remove_header(udp);
    src_filename: ''
    src_lineno: 1
    type: action

ingress::gtp_decap:
    implementation: |-
        remove_header(ipv4);
        remove_header(udp);
        remove_header(gtpu);
    src_filename: main.p4
    src_lineno: 246
    type: action

ingress::gtp_encap:
    implementation: |-
        add_header(ipv4);
        add_header(udp);
        add_header(gtpu);
        add_header(inner_ipv4);
        modify_field(inner_ipv4.version, ipv4.version);
        modify_field(inner_ipv4.ihl, ipv4.ihl);
        modify_field(inner_ipv4.dscp, ipv4.dscp);
        modify_field(inner_ipv4.ecn, ipv4.ecn);
        modify_field(inner_ipv4.len, ipv4.len);
        modify_field(inner_ipv4.identification, ipv4.identification);
        modify_field(inner_ipv4.flags, ipv4.flags);
        modify_field(inner_ipv4.frag_offset, ipv4.frag_offset);
        modify_field(inner_ipv4.ttl, ipv4.ttl);
        modify_field(inner_ipv4.protocol, ipv4.protocol);
        modify_field(inner_ipv4.hdr_checksum, ipv4.hdr_checksum);
        modify_field(inner_ipv4.src_addr, ipv4.src_addr);
        modify_field(inner_ipv4.dst_addr, ipv4.dst_addr);
        modify_field(gtpu.version, 0x01);
        modify_field(gtpu.pt, 0x01);
        modify_field(gtpu.spare, 0x00);
        modify_field(gtpu.ex_flag, 0x00);
        modify_field(gtpu.seq_flag, 0x00);
        modify_field(gtpu.npdu_flag, 0x00);
        modify_field(gtpu.msgtype, 0xff);
        modify_field(gtpu.msglen, ipv4.len);
        modify_field(gtpu.teid, teid);
        modify_field(udp.src_port, 0x0868);
        modify_field(udp.dst_port, 0x0868);
        modify_field(udp.len, _expression_gtp_encap_0);
        modify_field(udp.checksum, 0x0000);
        modify_field(ipv4.version, 0x04);
        modify_field(ipv4.ihl, 0x05);
        modify_field(ipv4.dscp, 0x00);
        modify_field(ipv4.len, _expression_gtp_encap_1);
        modify_field(ipv4.identification, 0x1513);
        modify_field(ipv4.flags, 0x00);
        modify_field(ipv4.frag_offset, 0x0000);
        modify_field(ipv4.ttl, 0x40);
        modify_field(ipv4.protocol, 0x11);
        modify_field(ipv4.src_addr, upf_ip);
        modify_field(ipv4.dst_addr, ran_ip);
        modify_field(ipv4.hdr_checksum, 0x0000);
    parameter_list:
    -   teid: 32
    -   ran_ip: 32
    -   upf_ip: 32
    src_filename: main.p4
    src_lineno: 315
    type: action

ingress::set_rules:
    implementation: |-
        modify_field(scalars.metadata_t@far_id, far_id);
        modify_field(scalars.metadata_t@decap_flag, must_decap);
    parameter_list:
    -   far_id: 32
    -   must_decap: 8
    src_filename: main.p4
    src_lineno: 257
    type: action

ingress::set_src_intf:
    implementation: |-
        modify_field(scalars.metadata_t@intf, src_intf);
        modify_field(standard_metadata.egress_spec, port);
    parameter_list:
    -   src_intf: 8
    -   port: 16
    src_filename: main.p4
    src_lineno: 252
    type: action

ingress::update_mac:
    implementation: |-
        modify_field(ethernet.src_addr, src_mac);
        modify_field(ethernet.dst_addr, dst_mac);
    parameter_list:
    -   src_mac: 48
    -   dst_mac: 48
    src_filename: main.p4
    src_lineno: 382
    type: action


##########################################
# Ingress and Egress tables              #
##########################################

ingress::far_egress_table:
    allowed_actions:
    - ingress::gtp_encap
    match_on:
        scalars.metadata_t@far_id: exact
    max_entries: 1025
    src_filename: main.p4
    src_lineno: 368
    type: table

ingress::pdr_ingress_table_dl:
    allowed_actions:
    - ingress::set_rules
    match_on:
        ipv4.dst_addr: exact
        scalars.metadata_t@intf: exact
    max_entries: 1025
    src_filename: main.p4
    src_lineno: 290
    type: table

ingress::pdr_ingress_table_ul:
    allowed_actions:
    - ingress::set_rules
    match_on:
        inner_ipv4.src_addr: exact
        scalars.metadata_t@intf: exact
    max_entries: 1025
    src_filename: main.p4
    src_lineno: 277
    type: table

ingress::route:
    allowed_actions:
    - ingress::update_mac
    match_on:
        inner_ipv4.dst_addr: exact
        ipv4.dst_addr: exact
    max_entries: 1025
    src_filename: main.p4
    src_lineno: 387
    type: table

ingress::src_intf_table:
    allowed_actions:
    - ingress::set_src_intf
    match_on:
        standard_metadata.ingress_port: exact
    max_entries: 33
    src_filename: main.p4
    src_lineno: 264
    type: table

ingress::tbl_act:
    allowed_actions:
    - ingress::act
    default_entry:
        action: ingress::act
        const: true
    max_entries: 1025
    src_filename: ''
    src_lineno: 1
    type: table

ingress::tbl_gtp_decap:
    allowed_actions:
    - ingress::gtp_decap
    default_entry:
        action: ingress::gtp_decap
        const: true
    max_entries: 1025
    src_filename: ''
    src_lineno: 1
    type: table


##########################################
# Ingress conditionals sets              #
##########################################

_condition_0:
    condition: (valid(udp))
    format: bracketed_expr
    src_filename: main.p4
    src_lineno: 402
    type: conditional

_condition_1:
    condition: ((scalars.metadata_t@l4_src_port) != (2152))
    format: bracketed_expr
    src_filename: main.p4
    src_lineno: 403
    type: conditional

_condition_2:
    condition: ((scalars.metadata_t@decap_flag) == (1))
    format: bracketed_expr
    src_filename: main.p4
    src_lineno: 417
    type: conditional


##########################################
# Ingress control flow                   #
##########################################

ingress_flow:
    doc: control flow for ingress
    format: dot
    implementation: |-
        digraph {
            "_condition_0" -> "ingress::src_intf_table" [condition = false]
            "_condition_0" -> "_condition_1" [condition = true]
            "ingress::src_intf_table" -> "ingress::pdr_ingress_table_ul" [action = always]
            "ingress::pdr_ingress_table_ul" -> "ingress::pdr_ingress_table_dl" [action = always]
            "ingress::pdr_ingress_table_dl" -> "ingress::far_egress_table" [action = always]
            "ingress::far_egress_table" -> "ingress::route" [action = always]
            "ingress::route" -> "_condition_2" [action = always]
            "_condition_2" -> "exit_control_flow" [condition = false]
            "_condition_2" -> "ingress::tbl_gtp_decap" [condition = true]
            "ingress::tbl_gtp_decap" -> "exit_control_flow" [action = always]
            "_condition_1" -> "ingress::src_intf_table" [condition = false]
            "_condition_1" -> "ingress::tbl_act" [condition = true]
            "ingress::tbl_act" -> "ingress::src_intf_table" [action = always]
        }
    start_state: _condition_0
    type: control_flow


##########################################
# Deparsers                              #
##########################################

deparser:
    order:
    - ethernet
    - ipv4
    - udp
    - tcp
    - gtpu
    - inner_ipv4
    - inner_udp
    - inner_tcp
    type: deparser


##########################################
# Processor layout                       #
##########################################

layout:
    format: list
    implementation:
    - parser
    - ingress
    type: processor_layout


##########################################
# Source info                            #
##########################################

source_info:
    date: 2022/08/26 16:36:19
    output_file: output/main.yml
    p4_version: '16'
    source_files:
    - main.p4
    - ''
    - /opt/netronome/p4/include/16/p4include/core.p4
    type: source_info


